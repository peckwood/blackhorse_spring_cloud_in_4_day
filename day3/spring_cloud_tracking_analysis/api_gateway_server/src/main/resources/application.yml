server:
  port: 8080
spring:
  application:
    name: api-gateway-server
  cloud:
    #配置Spring Cloud Gateway的路由
    gateway:
      routes:
        #配置路由: 路由id, 路由到微服务的uri, 断言(判断条件)
        - id: order-service # 保持唯一即可
          #          uri: http://127.0.0.1:9001 # 目标微服务请求地址
          uri: lb://service-order # 根据微服务名称从注册中心中拉取服务请求路径
          predicates:
            # 注意与zuul不同, Path里的内容会全部被append到uri的后面, 所以不能随便写, Path里面必须是product
            #            - Path=/product/** #转发路由条件 Path: 路径匹配条件
            # 上一种方式不允许自定义路径, 如果要实现自定义路径, 如localhost:8080/product-service/product/:id
            # 需要重写转发路径
            - Path=/order-service/**
          filters: #配置路由过滤器
            - RewritePath=/order-service/(?<segment>.*), /$\{segment} #路径重写的过滤器, 在yml中$写为$\
#  修改zipkin, 使用rabbit mq 采集数据
  zipkin:
    #base-url: http://127.0.0.1:9411/ #server的请求路径
    sender:
      type: rabbit #数据的传输方式, 以 rabbit 的方式向server端发送数据
  sleuth:
    sampler:
      probability: 1 #采样比, 默认是0.1, 开发时可以设置为1
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener: # 这里配置了重试策略
      direct:
        retry:
          enabled: true
      simple:
        retry:
          enabled: true
  
# eureka注册中心
eureka:
  client:
    service-url:
      defaultZone: http://localhost:9000/eureka
    instance:
      prefer-ip-address: true # 使用ip地址注册
logging:
  level:
    root: INFO
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.cloud.sleuth: DEBUG
